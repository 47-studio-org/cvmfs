
cvmfs_test_name="Client Hotpatching During Filesystem Stress"

guess_package_url() {
  local package_name=$1
  local cvmfs_version_string=$2

  local base_url="https://ecsft.cern.ch/dist/cvmfs"
  local short_cvmfs_version_string=$(echo "$cvmfs_version_string" | cut -d- -f1)
  local package_file_name=""

  # check that we are on Linux
  if [ $(uname -s 2>/dev/null) != "Linux" ]; then
    return 1
  fi

  # Ubuntu
  if [ -f /etc/debian_version ]                               && \
     [ x$(lsb_release --id --short 2>/dev/null) = x"Ubuntu" ] && \
     [ $(uname -m) = "x86_64" ]; then
    package_file_name="${package_name}_${short_cvmfs_version_string}_amd64.deb"

  # SLC 5 and 6
  elif [ x$(lsb_release --id --short 2>/dev/null) = x"ScientificCERNSLC" ]; then
    local slc_major_version=$(lsb_release --description --short | sed 's/^.* \([0-9]\)\.[0-9] .*$/\1/')
    local architecture=$(uname -m)
    if [ x"$slc_major_version" = x"5" ] || [ x"$slc_major_version" = x"6" ]; then
      package_file_name="${package_name}-${cvmfs_version_string}.el${slc_major_version}.${architecture}.rpm"
    fi

  # to be extended
  else
    return 2
  fi

  # check if we found something useful
  if [ x"$package_file_name" = x"" ]; then
    return 3
  fi

  # build and echo the full rpm URL
  echo "${base_url}/cvmfs-${short_cvmfs_version_string}/${package_file_name}"
  return 0
}

guess_package_url cvmfs 2.1.14-1

cvmfs_run_test() {
  logfile=$1

  echo "Dummy test" >> $logfile || return 1

  return 0
}

