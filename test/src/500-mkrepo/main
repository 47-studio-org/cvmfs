
cvmfs_test_name="Populate repository test"

produce_files_in()
{
	working_dir=$1

	cd $working_dir

	echo "meaningless file content" > file
	echo "more clever file content" > clever

	mkdir foo
	mkdir bar

	mkdir foo/bar
	mkdir bar/foo

	ln file hardlinkToFile
	ln -s clever symlinkToClever

	cd -
}

cvmfs_run_test() {
  logfile=$1
  repo_dir=/cvmfs/$CVMFS_TEST_REPO

  scratch_dir=`pwd`
  mkdir reference_dir
  reference_dir=$scratch_dir/reference_dir

  create_empty_repo $CVMFS_TEST_REPO $CVMFS_TEST_USER >> $logfile 2>&1 || return 1

  echo "starting transaction to edit repository" >> $logfile
  cvmfs_server transaction $CVMFS_TEST_REPO >> $logfile 2>&1 || return 2

  echo "putting some stuff in the new repository" >> $logfile
  produce_files_in $repo_dir >> $logfile 2>&1 || return 3

  echo "putting exactly the same stuff in the scratch space for comparison" >> $logfile
  produce_files_in $reference_dir >> $logfile 2>&1 || return 4

  echo "creating CVMFS snapshot" >> $logfile
  cvmfs_server publish $CVMFS_TEST_REPO >> $logfile 2>&1 || return 5

  echo "compare the results of cvmfs to our reference copy" >> $logfile
  cvmfs_listing=`create_listing $repo_dir`
  reference_listing=`create_listing $reference_dir`

  echo "check if the file contents are correct" >> $logfile
  diff -ruN $repo_dir $reference_dir >> $logfile 2>&1 || return 6

  echo "check if directory structure and file meta data fits" >> $logfile
  echo -e "$cvmfs_listing" > cvmfs_listing
  echo -e "$reference_listing" > reference_listing
  diff -uN cvmfs_listing reference_listing >> $logfile 2>&1 || return 7

  return 0
}

