cvmfs_test_name="Non-Zero Return Code on Failing Repo-Management Commands"
cvmfs_test_autofs_on_startup=false

cvmfs_run_test() {
  logfile=$1

  echo "create a fresh repository named $CVMFS_TEST_REPO with user $CVMFS_TEST_USER"
  create_repo $CVMFS_TEST_REPO $CVMFS_TEST_USER || return $?

  echo "starting transaction to edit repository"
  start_transaction $CVMFS_TEST_REPO || return $?

  echo "starting another transaction (should fail)"
  start_transaction $CVMFS_TEST_REPO && return 1

  echo "aborting transaction"
  abort_transaction $CVMFS_TEST_REPO || return $?

  echo "aborting transaction again (should fail)"
  abort_transaction $CVMFS_TEST_REPO && return 2

  echo "starting a transaction"
  start_transaction $CVMFS_TEST_REPO || return $?

  echo "publish repository"
  publish_repo $CVMFS_TEST_REPO || return $?

  echo "publish again (should fail)"
  publish_repo $CVMFS_TEST_REPO && return 3

  echo "open transaction for rollback"
  start_transaction $CVMFS_TEST_REPO || return $?

  echo "rollback to trunk-previous (should fail - in a transaction)"
  rollback_repo $CVMFS_TEST_REPO "trunk-previous" && return 4

  echo "abort transaction"
  abort_transaction $CVMFS_TEST_REPO || return $?

  echo "rollback to trunc-previous (should fail - unknown tag)"
  rollback_repo $CVMFS_TEST_REPO "trunc-previous" && return 5

  echo "rollback to trunk-previous"
  rollback_repo $CVMFS_TEST_REPO "trunk-previous" || return $?

  echo "inspect unknown tag (should fail)"
  cvmfs_server tag -i "foobar" $CVMFS_TEST_REPO && return 6

  echo "list unknown repo (should fail)"
  cvmfs_server tag -l ${CVMFS_TEST_REPO}.unobtainium && return 7

  echo "delete unknown tag (should fail)"
  cvmfs_server tag -r trunc-previous -f $CVMFS_TEST_REPO && return 8

  echo "open transaction"
  start_transaction $CVMFS_TEST_REPO || return $?

  echo "try to add a tag (should fail - due to transaction)"
  cvmfs_server tag -a "foobar" -m "this fails!" $CVMFS_TEST_REPO && return 9

  echo "abort transaction"
  abort_transaction $CVMFS_TEST_REPO || return $?

  echo "resign repository"
  sudo cvmfs_server resign $CVMFS_TEST_REPO || return $?

  echo "resign with broken master key (should fail)"
  local master_key="/etc/cvmfs/keys/${CVMFS_TEST_REPO}.masterkey"
  sudo cp $master_key .
  echo "this is not valid!" | sudo tee $master_key || return 10
  sudo cvmfs_server resign $CVMFS_TEST_REPO && return 11

  echo "save .cvmfswhitelist and remove repository"
  local store_dir=/srv/cvmfs/$CVMFS_TEST_REPO
  cp $store_dir/.cvmfswhitelist .
  destroy_repo $CVMFS_TEST_REPO || return $?

  echo "remove again (should fail)"
  destroy_repo $CVMFS_TEST_REPO && return 12

  echo "restore masterkey and .cvmfswhitelist and set a trap for cleaning them"
  trap "sudo rm -rf $store_dir $master_key" EXIT HUP INT TERM
  sudo mv `basename $master_key` $master_key
  sudo mkdir -p $store_dir
  sudo chown $CVMFS_TEST_USER $store_dir
  mv .cvmfswhitelist $store_dir

  echo "resign .cvmfswhitelist without requiring repo config"
  sudo cvmfs_server resign -n $CVMFS_TEST_REPO || return $?

  echo "remove .cvmfswhitelist and masterkey and try to resign again (should fail)"
  sudo rm -rf $store_dir $master_key
  trap - EXIT HUP INT TERM

  sudo cvmfs_server resign -n $CVMFS_TEST_REPO && return 13

  return 0
}

