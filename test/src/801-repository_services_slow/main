cvmfs_test_name="Repository services Slow"
cvmfs_test_autofs_on_startup=false

clean_up() {
    echo "Cleaning up"

    echo "  Stopping repository services application"
    /opt/cvmfs_services/bin/cvmfs_services stop

    echo "  Removing Mnesia directory"
    rm -rf /opt/cvmfs_mnesia

    echo "  Removing test repository"
    sudo -E cvmfs_server rmfs -f test.repo.org

    echo "  Removing test directories"
    rm -rf /tmp/cvmfs_receiver_commit_processor*
}

check_status() {
    echo $(( $1 || 0 ))
}

compare_file_checksum() {
    local file_name=$1
    local target_checksum=$2
    local checksum=$(md5sum $file_name | cut -d' ' -f1)
    echo "Checksum of $file_name is $checksum"
    if [ "$checksum" != "$target_checksum" ]; then
        echo "Checksum mismatch for $file_name. Expected $target_checksum. Found $checksum"
        exit 1
    fi
}

save_repo_contents() {
    local dest=$1
    rm -rf $dest
    mkdir -p $dest
    cp -r /cvmfs/test.repo.org/* $dest/
}

run_transactions() {
    set_up_repository_services

    echo "Checking transaction + publish"

    ## Transaction 1

    echo "  Starting transaction 1"
    cvmfs_server transaction -e test.repo.org

    echo "  Copying the contents of /usr/bin into repository"
    cp -rv /usr/bin/* /cvmfs/test.repo.org/

    echo "  Publishing changes 1"
    cvmfs_server publish -e test.repo.org

    echo "  Remounting test repository"
    sudo cvmfs_server mount -a

    echo "  Copy the contents of the repository"
    save_repo_contents /tmp/cvmfs_out

    ## Check results

    # compare_file_checksum /tmp/cvmfs_out_1/new_file.txt d8e8fca2dc0f896fd7cb4cb0031ba249
    # compare_file_checksum /tmp/cvmfs_out_1/new_repository e5747677debcb10cabe17d87a40e7fa4
    # compare_file_checksum /tmp/cvmfs_out_2/new_repository/another_file.txt d8e8fca2dc0f896fd7cb4cb0031ba249
    # if [ -d /tmp/cvmfs_out_3/new_repository ]; then
    #     echo "/cvmfs/test/repo.org/new_repository should have been deleted in transaction 3"
    #     exit 1
    # fi

    clean_up
}

cvmfs_run_test() {
    trap clean_up EXIT HUP INT TERM || return $?

    run_transactions
    local status=$?

    return $(check_status $status)
}

