cvmfs_test_name="Server Infrastructure Mounting"
cvmfs_test_autofs_on_startup=false

set_auto_repair() {
  local name="$1"
  local value="$2"

  local server_conf="/etc/cvmfs/repositories.d/${name}/server.conf"
  if cat $server_conf | grep -q "CVMFS_AUTO_REPAIR_MOUNTPOINT"; then
    sudo sed -i -e \
      "s/^\(CVMFS_AUTO_REPAIR_MOUNTPOINT\)=.*$/\1=${value}/" $server_conf
  else
    echo "CVMFS_AUTO_REPAIR_MOUNTPOINT=${value}" \
      | sudo tee --append $server_conf
  fi
}

disable_auto_repair() {
  local name="$1"
  set_auto_repair $name "false"
}

enable_auto_repair() {
  local name="$1"
  set_auto_repair $name "true"
}

cvmfs_run_test() {
  logfile=$1
  local repo_dir=/cvmfs/$CVMFS_TEST_REPO
  local scratch_dir=$(pwd)

  echo "create a fresh repository named $CVMFS_TEST_REPO with user $CVMFS_TEST_USER"
  create_empty_repo $CVMFS_TEST_REPO $CVMFS_TEST_USER || return $?

  echo "pull in repository configuration"
  load_repo_config $CVMFS_TEST_REPO || return 1
  local rdonly_dir="${CVMFS_SPOOL_DIR}/rdonly"

  echo "make sure that CVMFS_AUTO_REPAIR_MOUNTPOINT=true"
  [ x"$CVMFS_AUTO_REPAIR_MOUNTPOINT" != x"false" ] || return 100

  # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
  # Check standard mount of unmounted repository outside of transaction

  echo "Unmount $CVMFS_TEST_REPO"
  cvmfs_suid_helper rw_umount     $CVMFS_TEST_REPO || return 2
  cvmfs_suid_helper rdonly_umount $CVMFS_TEST_REPO || return 3

  echo "Check that the repository is properly unmounted"
  cat /proc/mounts | grep -e " $repo_dir "   && return 4
  cat /proc/mounts | grep -e " $rdonly_dir " && return 5

  echo "Mount the repository using cvmfs_server"
  cvmfs_server mount $CVMFS_TEST_REPO || return 6

  echo "Check that the repository is properly mounted"
  cat /proc/mounts | grep -e " $repo_dir "   || return 7
  cat /proc/mounts | grep -e " $rdonly_dir " || return 8

  echo "check catalog and data integrity"
  check_repository $CVMFS_TEST_REPO -i  || return $?

  # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
  # Check mount of unmounted repository during transaction

  echo "open transaction"
  start_transaction $CVMFS_TEST_REPO || return 9

  echo "Unmount $CVMFS_TEST_REPO"
  cvmfs_suid_helper rw_umount     $CVMFS_TEST_REPO || return 10
  cvmfs_suid_helper rdonly_umount $CVMFS_TEST_REPO || return 11

  echo "Check that the repository is properly unmounted"
  cat /proc/mounts | grep -e " $repo_dir "   && return 12
  cat /proc/mounts | grep -e " $rdonly_dir " && return 13

  echo "Mount the repository using cvmfs_server"
  cvmfs_server mount $CVMFS_TEST_REPO || return 14

  echo "Check that the repository is properly mounted"
  cat /proc/mounts | grep -e " $repo_dir "          || return 15
  cat /proc/mounts | grep -e " $rdonly_dir "        || return 16
  cat /proc/mounts | grep -e " ${repo_dir}.*rw[ ,]" || return 17

  echo "publish repository"
  publish_repo $CVMFS_TEST_REPO || return 18

  echo "check catalog and data integrity"
  check_repository $CVMFS_TEST_REPO -i  || return $?

  # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
  # Check mounting rdonly-branch of repository during transaction

  echo "open transaction"
  start_transaction $CVMFS_TEST_REPO || return 19

  echo "Unmount $CVMFS_TEST_REPO (rdonly only)"
  cvmfs_suid_helper rw_umount     $CVMFS_TEST_REPO || return 20
  cvmfs_suid_helper rdonly_umount $CVMFS_TEST_REPO || return 21
  cvmfs_suid_helper rw_mount      $CVMFS_TEST_REPO || return 22

  echo "Check that the repository is properly unmounted"
  cat /proc/mounts | grep -e " $repo_dir "   || return 23
  cat /proc/mounts | grep -e " $rdonly_dir " && return 24

  echo "Mount the repository using cvmfs_server"
  cvmfs_server mount $CVMFS_TEST_REPO || return 25

  echo "Check that the repository is properly mounted"
  cat /proc/mounts | grep -e " $repo_dir "          || return 26
  cat /proc/mounts | grep -e " $rdonly_dir "        || return 27
  cat /proc/mounts | grep -e " ${repo_dir}.*rw[ ,]" || return 28

  echo "publish repository"
  publish_repo $CVMFS_TEST_REPO || return 29

  echo "check catalog and data integrity"
  check_repository $CVMFS_TEST_REPO -i  || return $?

  # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
  # Check mounting repository with CVMFS_AUTO_REPAIR_MOUNTPOINT=false

  echo "set CVMFS_AUTO_REPAIR_MOUNTPOINT=false"
  disable_auto_repair $CVMFS_TEST_REPO || return 31

  echo "Unmount $CVMFS_TEST_REPO"
  cvmfs_suid_helper rw_umount     $CVMFS_TEST_REPO || return 32
  cvmfs_suid_helper rdonly_umount $CVMFS_TEST_REPO || return 33

  echo "Check that the repository is properly unmounted"
  cat /proc/mounts | grep -e " $repo_dir "   && return 34
  cat /proc/mounts | grep -e " $rdonly_dir " && return 35

  echo "Mount the repository using cvmfs_server"
  cvmfs_server mount $CVMFS_TEST_REPO || return 36

  echo "Check that the repository is properly mounted"
  cat /proc/mounts | grep -e " $repo_dir "   || return 37
  cat /proc/mounts | grep -e " $rdonly_dir " || return 38

  echo "check catalog and data integrity"
  check_repository $CVMFS_TEST_REPO -i  || return $?

  echo "set CVMFS_AUTO_REPAIR_MOUNTPOINT=true"
  enable_auto_repair $CVMFS_TEST_REPO || return 39

  return 0
}

